import json
from datetime import date, timedelta
import random
from faker import Faker
"""
Faker ‚Äî —Ü–µ –ø–æ—Ç—É–∂–Ω–∞ Python-–±—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ–µ–π–∫–æ–≤–∏—Ö (–≤–∏–ø–∞–¥–∫–æ–≤–∏—Ö) –¥–∞–Ω–∏—Ö, —Ç–∞–∫–∏—Ö —è–∫:

—ñ–º–µ–Ω–∞, –∞–¥—Ä–µ—Å–∏, email-–∏, —Ç–µ–ª–µ—Ñ–æ–Ω–∏;
–¥–∞—Ç–∏ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è, –∫–æ–º–ø–∞–Ω—ñ—ó, –ø—Ä–æ—Ñ–µ—Å—ñ—ó;
—Ç–µ–∫—Å—Ç, –∫—Ä–∞—ó–Ω–∏, –≤–∞–ª—é—Ç–∏, IBAN-–∏;
–Ω–∞–≤—ñ—Ç—å lorem ipsum —Ç–∞ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ.
üîß –ù–∞–≤—ñ—â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è:
–î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è, –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π, –Ω–∞–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–≤ –¥–∞–Ω–∏—Ö, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ–µ–π–∫–æ–≤–∏—Ö –ø—Ä–æ—Ñ—ñ–ª—ñ–≤ –∞–±–æ –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏.

"""
# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Faker –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ñ–µ–π–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
fake = Faker('uk_UA')

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ–¥–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
def generate_person():
    birth_date = fake.date_of_birth(minimum_age=18, maximum_age=110)
    death_date = None
    if random.random() < 0.1:  # 10% —à–∞–Ω—Å, —â–æ –ª—é–¥–∏–Ω–∞ –ø–æ–º–µ—Ä–ª–∞
        death_date = birth_date + timedelta(days=random.randint(2000, 25000))
        if death_date > date.today():
            death_date = None

    return {
        "first_name": fake.first_name(),
        "last_name": fake.last_name(),
        "middle_name": fake.middle_name(),
        "birth_date": birth_date.isoformat(),
        "death_date": death_date.isoformat() if death_date else None,
        "gender": random.choice(["male", "female"])
    }

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Å–ø–∏—Å–∫—É –∑ 500 –∫–ª—ñ—î–Ω—Ç—ñ–≤
people = [generate_person() for _ in range(500)]

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É —Ñ–∞–π–ª
file_path = "load.json"
with open(file_path, "w", encoding="utf-8") as f:
    json.dump(people, f, ensure_ascii=False, indent=4)

file_path